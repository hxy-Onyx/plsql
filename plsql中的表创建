1.创建表时注意非空、主键、默认值
举例：
要求创建employees带有：雇员id（主键）、雇员name、部门名、地点、工资、工作年限、雇佣时间的表，所有列都非空
CREATE TABLE employees (
    employee_id NUMBER  NOT NULL PRIMARY KEY,
    employee_name VARCHAR2(50) NOT NULL,
    department VARCHAR2(50) DEFAULT 'Sales' NOT NULL,
    location VARCHAR2(50) DEFAULT 'New York' NOT NULL,
    salary NUMBER DEFAULT 5000 NOT NULL,
    years_of_experience NUMBER DEFAULT 1 NOT NULL,
    hire_date DATE DEFAULT SYSDATE NOT NULL
)TABLESPACE MY_TABLESPACE;

如果要在plsql中动态创建表：在begin使用execute immediate
BEGIN
    EXECUTE IMMEDIATE '
        CREATE TABLE employees (
            employee_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            employee_name VARCHAR2(50) NOT NULL,
            department VARCHAR2(50) DEFAULT ''Sales'' NOT NULL,
            location VARCHAR2(50) DEFAULT ''New York'' NOT NULL,
            salary NUMBER DEFAULT 5000 NOT NULL,
            years_of_experience NUMBER DEFAULT 1 NOT NULL,
            hire_date DATE DEFAULT SYSDATE NOT NULL
        )
    ';
    DBMS_OUTPUT.PUT_LINE('表 employees 创建成功。');
EXCEPTION
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('创建表时发生错误：' || SQLERRM);
END;

插入数据：
BEGIN
    -- 插入完整数据
    INSERT INTO employees (employee_name, department, location, salary, years_of_experience, hire_date)
    VALUES ('Charlie', 'HR', 'Boston', 5500, 3, TO_DATE('2022-06-01', 'YYYY-MM-DD'));
    
    -- 插入部分数据，依赖默认值
    INSERT INTO employees (employee_name, salary)
    VALUES ('Diana', 6200);
    
    COMMIT;
    DBMS_OUTPUT.PUT_LINE('数据插入成功。');
EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN
        DBMS_OUTPUT.PUT_LINE('重复的员工 ID。');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('插入数据时发生错误：' || SQLERRM);
        ROLLBACK;
END;
/

查询：
BEGIN
    FOR emp_rec IN (SELECT * FROM employees) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || emp_rec.employee_id ||
                             ', Name: ' || emp_rec.employee_name ||
                             ', Department: ' || emp_rec.department ||
                             ', Location: ' || emp_rec.location ||
                             ', Salary: ' || emp_rec.salary ||
                             ', Experience: ' || emp_rec.years_of_experience ||
                             ', Hire Date: ' || TO_CHAR(emp_rec.hire_date, 'YYYY-MM-DD'));
    END LOOP;
END;
/


